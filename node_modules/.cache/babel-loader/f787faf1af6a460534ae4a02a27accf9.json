{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/characterCounter/src/components/Counter/index.js\";\nimport { Component } from 'react';\nimport { v4 } from 'uuid';\nimport CounterItem from '../CounterItem';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialContainerBackgroundClassNames = ['amber', 'blue', 'orange', 'emerald', 'teal', 'red', 'light-blue'];\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nameInput: '',\n      commentInput: '',\n      commentsList: []\n    };\n\n    this.deleteComment = commentId => {\n      const {\n        commentsList\n      } = this.state;\n      this.setState({\n        commentsList: commentsList.filter(comment => comment.id !== commentId)\n      });\n    };\n\n    this.toggleIsLiked = id => {\n      this.setState(prevState => ({\n        commentsList: prevState.commentsList.map(eachComment => {\n          if (id === eachComment.id) {\n            return { ...eachComment,\n              isLiked: !eachComment.isLiked\n            };\n          }\n\n          return eachComment;\n        })\n      }));\n    };\n\n    this.renderCommentsList = () => {\n      const {\n        commentsList\n      } = this.state;\n      return commentsList.map(eachComment => /*#__PURE__*/_jsxDEV(CounterItem, {\n        commentDetails: eachComment,\n        toggleIsLiked: this.toggleIsLiked,\n        deleteComment: this.deleteComment\n      }, eachComment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this));\n    };\n\n    this.onAddComment = event => {\n      event.preventDefault();\n      const {\n        nameInput,\n        commentInput\n      } = this.state;\n      const initialBackgroundColorClassName = `initial-container ${initialContainerBackgroundClassNames[Math.ceil(Math.random() * initialContainerBackgroundClassNames.length - 1)]}`;\n      const newComment = {\n        id: v4(),\n        name: nameInput,\n        comment: commentInput,\n        date: new Date(),\n        isLiked: false,\n        initialClassName: initialBackgroundColorClassName\n      };\n      this.setState(prevState => ({\n        commentsList: [...prevState.commentsList, newComment],\n        nameInput: '',\n        commentInput: ''\n      }));\n    };\n\n    this.onChangeCommentInput = event => {\n      this.setState({\n        commentInput: event.target.value\n      });\n    };\n\n    this.onChangeNameInput = event => {\n      this.setState({\n        nameInput: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      nameInput\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"app-heading\",\n          children: \"Character Counter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-inputs\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: this.onAddComment,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"name-input\",\n              placeholder: \"Your Name\",\n              value: nameInput,\n              onChange: this.onChangeNameInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"add-button\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"heading\",\n          children: \"Count the characters like a Boss...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"comments-list\",\n          children: this.renderCommentsList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"names":["Component","v4","CounterItem","initialContainerBackgroundClassNames","Counter","state","nameInput","commentInput","commentsList","deleteComment","commentId","setState","filter","comment","id","toggleIsLiked","prevState","map","eachComment","isLiked","renderCommentsList","onAddComment","event","preventDefault","initialBackgroundColorClassName","Math","ceil","random","length","newComment","name","date","Date","initialClassName","onChangeCommentInput","target","value","onChangeNameInput","render"],"sources":["/home/workspace/reactjs/coding-practices/characterCounter/src/components/Counter/index.js"],"sourcesContent":["import {Component} from 'react'\nimport {v4} from 'uuid'\n\nimport CounterItem from '../CounterItem'\n\nimport './index.css'\n\nconst initialContainerBackgroundClassNames = [\n  'amber',\n  'blue',\n  'orange',\n  'emerald',\n  'teal',\n  'red',\n  'light-blue',\n]\n\nclass Counter extends Component {\n  state = {\n    nameInput: '',\n    commentInput: '',\n    commentsList: [],\n  }\n\n  deleteComment = commentId => {\n    const {commentsList} = this.state\n\n    this.setState({\n      commentsList: commentsList.filter(comment => comment.id !== commentId),\n    })\n  }\n\n  toggleIsLiked = id => {\n    this.setState(prevState => ({\n      commentsList: prevState.commentsList.map(eachComment => {\n        if (id === eachComment.id) {\n          return {...eachComment, isLiked: !eachComment.isLiked}\n        }\n        return eachComment\n      }),\n    }))\n  }\n\n  renderCommentsList = () => {\n    const {commentsList} = this.state\n\n    return commentsList.map(eachComment => (\n      <CounterItem\n        key={eachComment.id}\n        commentDetails={eachComment}\n        toggleIsLiked={this.toggleIsLiked}\n        deleteComment={this.deleteComment}\n      />\n    ))\n  }\n\n  onAddComment = event => {\n    event.preventDefault()\n    const {nameInput, commentInput} = this.state\n    const initialBackgroundColorClassName = `initial-container ${\n      initialContainerBackgroundClassNames[\n        Math.ceil(\n          Math.random() * initialContainerBackgroundClassNames.length - 1,\n        )\n      ]\n    }`\n    const newComment = {\n      id: v4(),\n      name: nameInput,\n      comment: commentInput,\n      date: new Date(),\n      isLiked: false,\n      initialClassName: initialBackgroundColorClassName,\n    }\n\n    this.setState(prevState => ({\n      commentsList: [...prevState.commentsList, newComment],\n      nameInput: '',\n      commentInput: '',\n    }))\n  }\n\n  onChangeCommentInput = event => {\n    this.setState({\n      commentInput: event.target.value,\n    })\n  }\n\n  onChangeNameInput = event => {\n    this.setState({\n      nameInput: event.target.value,\n    })\n  }\n\n  render() {\n    const {nameInput} = this.state\n\n    return (\n      <div className=\"app-container\">\n        <div className=\"comments-container\">\n          <h1 className=\"app-heading\">Character Counter</h1>\n          <div className=\"comments-inputs\">\n            <form className=\"form\" onSubmit={this.onAddComment}>\n              <input\n                type=\"text\"\n                className=\"name-input\"\n                placeholder=\"Your Name\"\n                value={nameInput}\n                onChange={this.onChangeNameInput}\n              />\n              <button type=\"submit\" className=\"add-button\">\n                Add\n              </button>\n            </form>\n          </div>\n          <hr className=\"line\" />\n          <p className=\"heading\">Count the characters like a Boss...</p>\n          <ul className=\"comments-list\">{this.renderCommentsList()}</ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Counter\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}